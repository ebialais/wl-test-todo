{"ast":null,"code":"export class Todo {\n  constructor(action) {\n    this.id = ++Todo.lastId;\n    this.action = action;\n    this.completed = false;\n  }\n\n}\nTodo.lastId = 0;\n;\nexport class CommunicationLayer {\n  constructor() {\n    this.todos = new Map();\n\n    this.fetchTodos = callback => {\n      callback && callback(Array.from(this.todos.values()));\n    };\n\n    this.addTodo = (action, reload) => {\n      let todo = new Todo(action);\n      this.todos.set(todo.id, todo);\n      reload && reload();\n    };\n\n    this.toggleCompleted = (id, reload) => {\n      let filteredTodo = this.todos.get(id);\n      filteredTodo.completed ? filteredTodo.completed = false : filteredTodo.completed = true;\n      reload && reload();\n    };\n\n    this.deleteTodo = (id, reload) => {\n      this.todos.delete(id);\n      reload && reload();\n    };\n\n    this.addTodo('aaaa');\n  }\n\n}","map":{"version":3,"sources":["/Users/emiliebialais/Desktop/tunzTest/wl-test-todo/src/Utils/Data.js"],"names":["Todo","constructor","action","id","lastId","completed","CommunicationLayer","todos","Map","fetchTodos","callback","Array","from","values","addTodo","reload","todo","set","toggleCompleted","filteredTodo","get","deleteTodo","delete"],"mappings":"AAAA,OAAO,MAAMA,IAAN,CAAW;AAGdC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,SAAKC,EAAL,GAAU,EAAEH,IAAI,CAACI,MAAjB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACH;;AAPa;AAALL,I,CACFI,M,GAAS,C;AAOnB;AAED,OAAO,MAAME,kBAAN,CAAyB;AAG5BL,EAAAA,WAAW,GAAE;AAAA,SAFbM,KAEa,GAFL,IAAIC,GAAJ,EAEK;;AAAA,SAIbC,UAJa,GAICC,QAAD,IAAc;AACvBA,MAAAA,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAACC,IAAN,CAAW,KAAKL,KAAL,CAAWM,MAAX,EAAX,CAAD,CAApB;AACH,KANY;;AAAA,SAQbC,OARa,GAQH,CAACZ,MAAD,EAASa,MAAT,KAAoB;AAC1B,UAAIC,IAAI,GAAG,IAAIhB,IAAJ,CAASE,MAAT,CAAX;AACA,WAAKK,KAAL,CAAWU,GAAX,CACID,IAAI,CAACb,EADT,EAEIa,IAFJ;AAIAD,MAAAA,MAAM,IAAIA,MAAM,EAAhB;AACH,KAfY;;AAAA,SAiBbG,eAjBa,GAiBK,CAACf,EAAD,EAAKY,MAAL,KAAgB;AAC9B,UAAII,YAAY,GAAG,KAAKZ,KAAL,CAAWa,GAAX,CAAejB,EAAf,CAAnB;AACAgB,MAAAA,YAAY,CAACd,SAAb,GACMc,YAAY,CAACd,SAAb,GAAyB,KAD/B,GAEMc,YAAY,CAACd,SAAb,GAAyB,IAF/B;AAGAU,MAAAA,MAAM,IAAIA,MAAM,EAAhB;AACH,KAvBY;;AAAA,SAyBbM,UAzBa,GAyBA,CAAClB,EAAD,EAAKY,MAAL,KAAgB;AACzB,WAAKR,KAAL,CAAWe,MAAX,CAAkBnB,EAAlB;AACAY,MAAAA,MAAM,IAAIA,MAAM,EAAhB;AACH,KA5BY;;AACT,SAAKD,OAAL,CAAa,MAAb;AACH;;AAL2B","sourcesContent":["export class Todo {\n    static lastId = 0;\n\n    constructor(action){\n        this.id = ++Todo.lastId;\n        this.action = action;\n        this.completed = false;\n    }\n};\n\nexport class CommunicationLayer {\n    todos = new Map();\n\n    constructor(){\n        this.addTodo('aaaa');\n    }\n\n    fetchTodos = (callback) => {\n        callback && callback(Array.from(this.todos.values()));\n    };\n\n    addTodo = (action, reload) => {\n        let todo = new Todo(action);\n        this.todos.set(\n            todo.id,\n            todo\n        );\n        reload && reload();\n    };\n\n    toggleCompleted = (id, reload) => {\n        let filteredTodo = this.todos.get(id)\n        filteredTodo.completed \n            ? filteredTodo.completed = false \n            : filteredTodo.completed = true;\n        reload && reload();\n    };\n\n    deleteTodo = (id, reload) => {\n        this.todos.delete(id);\n        reload && reload();\n    };\n}"]},"metadata":{},"sourceType":"module"}