{"ast":null,"code":"var _jsxFileName = \"/Users/emiliebialais/Desktop/tunzTest/wl-test-todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { TodoForm } from './Components/TodoForm';\nimport { TodoList } from './Components/TodoList';\nimport { CommunicationLayer } from './Utils/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst com = new CommunicationLayer();\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const reload = () => {\n    com.fetchTodos(setTodos);\n  };\n\n  const addTodo = action => {\n    com.addTodo(action, reload);\n  };\n\n  const toggleCompleted = id => {\n    com.toggleCompleted(id, reload);\n  };\n\n  const deleteTodo = id => {\n    com.deleteTodo(id, reload);\n  };\n\n  useEffect(() => {\n    reload();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo-title\",\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleCompleted: toggleCompleted,\n      className: \"todo-list\",\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emiliebialais/Desktop/tunzTest/wl-test-todo/src/App.js"],"names":["useState","useEffect","TodoForm","TodoList","CommunicationLayer","com","App","todos","setTodos","reload","fetchTodos","addTodo","action","toggleCompleted","id","deleteTodo"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,MAAMC,GAAG,GAAG,IAAID,kBAAJ,EAAZ;;AAEA,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,MAAM,GAAG,MAAM;AACnBJ,IAAAA,GAAG,CAACK,UAAJ,CAAeF,QAAf;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAIC,MAAD,IAAY;AAC1BP,IAAAA,GAAG,CAACM,OAAJ,CAAYC,MAAZ,EAAoBH,MAApB;AACD,GAFD;;AAIA,QAAMI,eAAe,GAAIC,EAAD,IAAQ;AAC9BT,IAAAA,GAAG,CAACQ,eAAJ,CAAoBC,EAApB,EAAwBL,MAAxB;AACD,GAFD;;AAIA,QAAMM,UAAU,GAAID,EAAD,IAAQ;AACzBT,IAAAA,GAAG,CAACU,UAAJ,CAAeD,EAAf,EAAmBL,MAAnB;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEE;AADX;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEJ,KADT;AAEE,MAAA,eAAe,EAAEM,eAFnB;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,UAAU,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMT,G;;KAAAA,G;AAuCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport { TodoForm } from './Components/TodoForm';\nimport { TodoList } from './Components/TodoList';\nimport { CommunicationLayer } from './Utils/Data';\n\nconst com = new CommunicationLayer();\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const reload = () => {\n    com.fetchTodos(setTodos);\n  };\n\n  const addTodo = (action) => {\n    com.addTodo(action, reload);\n  };\n\n  const toggleCompleted = (id) => {\n    com.toggleCompleted(id, reload);\n  };\n\n  const deleteTodo = (id) => {\n    com.deleteTodo(id, reload)\n  };\n\n  useEffect(() => {\n    reload();\n  }, []);\n\n  return (\n    <div className='todo-app'>\n      <h1 className='todo-title'>Todo App</h1>\n      <TodoForm \n        addTodo={addTodo}\n      />\n      <TodoList \n        todos={todos}\n        toggleCompleted={toggleCompleted}\n        className='todo-list'\n        deleteTodo={deleteTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}